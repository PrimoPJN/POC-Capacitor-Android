{"version":3,"sources":["./src/app/redux/models/cart.model.ts","./src/app/notification/notification.component.ts","./src/app/notification/notification.component.html","./src/app/redux/actions/cart.action.ts","./src/environments/environment.ts","./src/app/redux/models/product.model.ts","./src/app/redux/reducers/cart.reducer.ts","./src/app/redux/redux.component.ts","./src/app/redux/redux.component.html","./src/app/app.component.html","./src/app/app.component.ts","./src/app/graphql/graphql.component.ts","./src/app/graphql/graphql.component.html","./src/app/app.module.ts","./src/app/camera/camera.component.ts","./src/app/camera/camera.component.html","./src/app/not-found/not-found.component.ts","./src/app/not-found/not-found.component.html","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAEA;AAAA;AAAO,MAAM,SAAS;IAAtB;QACW,aAAQ,GAAmB,EAAE,CAAC;QAC9B,UAAK,GAAW,CAAC,CAAC;IAC7B,CAAC;CAAA;;;;;;;;;;;;;;;;;ACMM,MAAM,qBAAqB;IAEhC,gBAAgB,CAAC;IAEjB,QAAQ,KAAK,CAAC;;0FAJH,qBAAqB;qGAArB,qBAAqB;QCXlC,oEAAG;QAAA,8EAAmB;QAAA,4DAAI;;;;;;;;;;;;;;ACE1B;AAAA;AAAA;AAAA;AAAA;AAAA,IAAY,WAIX;AAJD,WAAY,WAAW;IACnB,0BAAW;IACX,6BAAc;IACd,4BAAa;AACjB,CAAC,EAJW,WAAW,KAAX,WAAW,QAItB;AAEM,MAAM,GAAG,GAAG,CAAC,OAAY,EAAE,EAAE;IAChC,OAAe,EAAE,IAAI,EAAE,WAAW,CAAC,GAAG,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC;AAC/D,CAAC;AAEM,MAAM,MAAM,GAAG,CAAC,OAAY,EAAE,EAAE;IACnC,OAAe,EAAE,IAAI,EAAE,WAAW,CAAC,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC;AAClE,CAAC;AAEM,MAAM,KAAK,GAAG,GAAG,EAAE;IACtB,OAAe,EAAE,IAAI,EAAE,WAAW,CAAC,KAAK,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;AAC9D,CAAC;;;;;;;;;;;;;AClBD;AAAA;AAAA,gFAAgF;AAChF,mEAAmE;AACnE,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IAEjB,GAAG,EAAE,KAAK;IACV,UAAU,EAAE,wBAAwB;CACrC,CAAC;AAEF;;;;;;GAMG;AACH,sEAAsE;;;;;;;;;;;;;AClBtE;AAAA;AAAO,MAAM,YAAY;CAOxB;;;;;;;;;;;;;ACPD;AAAA;AAAA;AAAA;AAAA;AAAqD;AAEJ;AAG1C,MAAM,IAAI,GAAG,IAAI,4DAAS,EAAE,CAAC;AAE7B,SAAS,WAAW,CAAC,KAAK,GAAG,IAAI,EAAE,MAAmB;IACzD,QAAQ,MAAM,CAAC,IAAI,EAAE;QACjB,KAAK,gEAAW,CAAC,GAAG;YAChB;gBACI,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;gBACpC,KAAK,CAAC,KAAK,GAAG,cAAc,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;gBAE7C,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACnB,OAAO,KAAK,CAAC;aAChB;YAAA,CAAC;QAEN,KAAK,gEAAW,CAAC,MAAM;YACnB;gBACI,MAAM,KAAK,GAAG,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;gBACrD,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;gBAChC,KAAK,CAAC,KAAK,GAAG,cAAc,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;gBAE7C,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACnB,OAAO,KAAK,CAAC;aAChB;YAAA,CAAC;QAEN,KAAK,gEAAW,CAAC,KAAK;YAClB;gBACI,KAAK,GAAG,IAAI,4DAAS,EAAE,CAAC;gBACxB,KAAK,CAAC,KAAK,GAAG,cAAc,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;gBAE7C,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACnB,OAAO,KAAK,CAAC;aAChB;QAEL;YACI,OAAO,KAAK,CAAC;KACpB;AAGL,CAAC;AAED,SAAS,cAAc,CAAC,QAAwB;IAC5C,IAAI,KAAK,GAAW,CAAC,CAAC;IACtB,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;QACvB,KAAK,IAAI,OAAO,CAAC,KAAK,CAAC;IAC3B,CAAC,CAAC,CAAC;IACH,OAAO,KAAK,CAAC;AACjB,CAAC;;;;;;;;;;;;;;;;;;;;;;ACjDD;AAEA;AACA;;;;;;;;;ACAM;AACE;AAAI;AAAoB;AACpB;AAAoB;AACpB;;AACJ;AACA;AAAI;AAAsC;AAC1C;AAAI;AAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuB;AAAS;AAAS;AACrD;AAAI;AAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuB;AAAO;AAAS;AACrD;;;;;AAPM;AAAA;AACA;AAAA;AACA;AAAA;AAEK;AAAA;;;;;;AAPjB;AACI;AACE;AASF;AACJ;;;;;AAV8B;AAAA;;;;ADOxB,MAAO,cAAP,CAAqB;AAIzB,cACU,KADV,EACoC;AAA1B;AAJH,oBAAkB,IAAlB;AAKL,SAAK,KAAL,GAAa,KAAK,CAAC,IAAN,CAAW,0DAAM,CAAC,MAAD,CAAjB,CAAb;AACD;;AAED,UAAQ;AACN,SAAK,QAAL,GAAgB,KAAK,cAAL,EAAhB;AACD;;AAEK,KAAG,CAAC,OAAD,EAAQ;AAAA;;AAAA;AACf,WAAI,CAAC,KAAL,CAAW,QAAX,CAAoB,6EAAG,CAAC,OAAD,CAAvB;AADe;AAEhB;;AAEK,KAAG,CAAC,OAAD,EAAQ;AAAA;;AAAA;AACf,YAAI,CAAC,KAAL,CAAW,QAAX,CAAoB,gFAAM,CAAC,OAAD,CAA1B;AADe;AAEhB;;AAED,OAAK;AACH,SAAK,KAAL,CAAW,QAAX,CAAoB,+EAAK,EAAzB;AACD;;AAED,gBAAc;AACZ,QAAI,QAAQ,GAAG,IAAI,+EAAJ,EAAf;AACA,YAAQ,CAAC,GAAT,GAAe,sCAAf;AACA,YAAQ,CAAC,KAAT,GAAiB,KAAjB;AACA,YAAQ,CAAC,QAAT,GAAoB,QAApB;AACA,YAAQ,CAAC,WAAT,GAAuB,gCAAvB;AACA,YAAQ,CAAC,MAAT,GAAkB,CAAC,mFAAD,CAAlB;AACA,YAAQ,CAAC,KAAT,GAAiB,MAAjB;AAEA,QAAI,QAAQ,GAAG,IAAI,+EAAJ,EAAf;AACA,YAAQ,CAAC,GAAT,GAAe,sCAAf;AACA,YAAQ,CAAC,KAAT,GAAiB,UAAjB;AACA,YAAQ,CAAC,QAAT,GAAoB,SAApB;AACA,YAAQ,CAAC,WAAT,GAAuB,qBAAvB;AACA,YAAQ,CAAC,MAAT,GAAkB,CAAC,oFAAD,CAAlB;AACA,YAAQ,CAAC,KAAT,GAAiB,OAAjB;AAEA,QAAI,QAAQ,GAAoB,IAAI,KAAJ,EAAhC;AACA,YAAQ,CAAC,IAAT,CAAc,QAAd;AACA,YAAQ,CAAC,IAAT,CAAc,QAAd;AACA,WAAO,QAAP;AACD;;AA9CwB;;;mBAAd,c,EAAc,kH;AAAA,C;;;QAAd,c;AAAc,4B;AAAA,U;AAAA,S;AAAA,qF;AAAA;AAAA;ACX3B;AAAG;AAAY;AAEf;AAcA;;;AAEA;AAAQ;AAAA,eAAS,WAAT;AAAgB,OAAhB;AAAkB;AAAM;;;;AAhB1B;AAAA;AAcN;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICPI,4EAAyD;IACrD,uEAAmD;IAC/C,oEAAG;IAAA,uDAAkB;IAAA,4DAAI;IAC7B,4DAAI;IACR,4DAAS;;;IAHe,0DAA8B;IAA9B,+JAA8B;IAC3C,0DAAkB;IAAlB,kFAAkB;;ACL1B,MAAM,IAAI,GAAe;IAC9B,EAAE,IAAI,EAAE,SAAS,EAAQ,KAAK,EAAE,QAAQ,EAAE;IAC1C,EAAE,IAAI,EAAE,eAAe,EAAE,KAAK,EAAE,cAAc,EAAE;IAChD,EAAE,IAAI,EAAE,QAAQ,EAAS,KAAK,EAAE,OAAO,EAAE;IACzC,EAAE,IAAI,EAAE,QAAQ,EAAS,KAAK,EAAE,OAAO,EAAE;IACzC,EAAE,IAAI,EAAE,UAAU,EAAO,KAAK,EAAE,SAAS,EAAE;CAC5C,CAAC;AAOK,MAAM,YAAY;IAIvB;QAHA,UAAK,GAAG,iBAAiB,CAAC;QAC1B,cAAS,GAAU,EAAE,CAAC;IAEN,CAAC;IAEjB,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC;IACrD,CAAC;;wEARU,YAAY;4FAAZ,YAAY;QDnBzB,8EAAa;QACT,uEAAM;QAAA,uDAAW;QAAA,4DAAO;QACxB,qEAAoC;QACpC,4EAAyE;QACrE,2EAAU;QAAA,+DAAI;QAAA,4DAAW;QAC7B,4DAAS;QACb,4DAAc;QAEd,oFAA0B;QACtB,8GAIS;QACb,4DAAW;QACX,4EAA+B;;;QAdrB,0DAAW;QAAX,0EAAW;QAEO,0DAA0B;QAA1B,kFAA0B;QAMP,0DAAY;QAAZ,kFAAY;;;;;;;;;;;;;;AER3D;AAAA;AAAA;AAAA;AAAA;AAA2C;;;;;ICC3C,sEAAqB;IACjB,uEACF;IAAA,4DAAM;;;IACN,sEAAmB;IACjB,qEACF;IAAA,4DAAM;;;IAEJ,sEAAuC;IACrC,oEAAG;IAAA,uDAAkB;IAAA,4DAAI;IAC3B,4DAAM;;;IADD,0DAAkB;IAAlB,gFAAkB;;;IAFzB,sEAAuB;IACrB,kHAEM;IACR,4DAAM;;;IAHqB,0DAAY;IAAZ,qFAAY;;ADDlC,MAAM,gBAAgB;IAK3B,YAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;QAHlC,YAAO,GAAG,IAAI,CAAC;IAGsB,CAAC;IAEtC,QAAQ;QACN,IAAI,CAAC,MAAM;aACR,UAAU,CAAC;YACV,KAAK,EAAE,kDAAG;;;;;;SAMT;SACF,CAAC;aACD,YAAY,CAAC,SAAS,CAAC,CAAC,MAAW,EAAE,EAAE;;YACtC,IAAI,CAAC,SAAS,SAAG,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,IAAI,0CAAE,SAAS,CAAC;YACzC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;YAC9B,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;QAC5B,CAAC,CAAC,CAAC;IACP,CAAC;;gFAvBU,gBAAgB;gGAAhB,gBAAgB;QCR7B,oEAAG;QAAA,yEAAc;QAAA,4DAAI;QAErB,4GAEQ;QACN,4GAEM;QACN,4GAIM;;QAVF,0DAAa;QAAb,6EAAa;QAGX,0DAAW;QAAX,2EAAW;QAGX,0DAAe;QAAf,+EAAe;;;;;;;;;;;;;;ACPvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AAEC;AACJ;AACA;AACM;AAEL;AACT;AACU;AACW;AACR;AACkB;AAExB;AACR;AACD;AACK;AAEoB;AACX;AACC;AACH;AACM;AACgB;;;AAExE,SAAS,uBAAuB,CAAC,OAA2B;IACjE,OAAO,iFAAgB,CAAC;QACtB,IAAI,EAAE;YACJ,MAAM;SACP;QACD,SAAS,EAAE,IAAI;KAChB,CAAC,CAAC,OAAO,CAAC,CAAC;AACd,CAAC;AAED,MAAM,YAAY,GAAiC,CAAC,uBAAuB,CAAC,CAAC;AA0CtE,MAAM,SAAS;;kEAAT,SAAS;yFAAT,SAAS,cAFR,2DAAY;8FAdb;QACT;YACE,OAAO,EAAE,8DAAc;YACvB,UAAU,EAAE,CAAC,QAAkB,EAAE,EAAE;gBACjC,OAAO;oBACL,KAAK,EAAE,IAAI,kEAAa,EAAE;oBAC1B,IAAI,EAAE,QAAQ,CAAC,MAAM,CAAC;wBACpB,GAAG,EAAE,oCAAoC;qBAC1C,CAAC;iBACH,CAAC;YACJ,CAAC;YACD,IAAI,EAAE,CAAC,6DAAQ,CAAC;SACjB;KACF,YA3BQ;YACP,oEAAgB;YAChB,uEAAa;YACb,6FAAuB;YACvB,sEAAgB;YAChB,wEAAe;YACf,oEAAa;YACb,oEAAa;YACb,0EAAgB;YAChB,wDAAW,CAAC,OAAO,CACjB,EAAE,IAAI,EAAE,yEAAW,EAAE,EACrB,EAAE,YAAY,EAAE,CACjB;SACF;oIAiBU,SAAS,mBAtClB,2DAAY;QACZ,qEAAc;QACd,gFAAiB;QACjB,wEAAe;QACf,2FAAqB;QACrB,sEAAc;QACd,4EAAgB,aAGhB,oEAAgB;QAChB,uEAAa;QACb,6FAAuB;QACvB,sEAAgB;QAChB,wEAAe;QACf,oEAAa;QACb,oEAAa;QACb,0EAAgB;;;;;;;;;;;;;;;;;;;;ACtDpB;;;;;;ACCA;;;;;AAAK;;;;ADMC,MAAO,eAAP,CAAsB;AAG1B;AAFA,iBAA0B,EAA1B;AAEiB;;AAEjB,UAAQ,IAEP;;AAEK,aAAW;AAAA;;AAAA;AACf,YAAM,KAAK,SAAS,wDAAM,CAAC,QAAP,CAAgB;AAClC,eAAO,EAAE,EADyB;AAElC,oBAAY,EAAE,IAFoB;AAGlC,kBAAU,EAAE,kEAAgB,CAAC;AAHK,OAAhB,CAApB,CADe,CAOf;AACA;AACA;AACA;;AACA,UAAI,QAAQ,GAAG,KAAK,CAAC,OAArB,CAXe,CAaf;;AACA,WAAI,CAAC,KAAL,GAAa,KAAK,CAAC,OAAN,IAAiB,EAA9B;AAde;AAehB;;AAxByB;;;mBAAf,e;AAAe,C;;;QAAf,e;AAAe,6B;AAAA,U;AAAA,S;AAAA,2D;AAAA;AAAA;ACT5B;AAAG;AAAM;AACT;AAAQ;AAAA,eAAS,iBAAT;AAAsB,OAAtB;AAAwB;AAAU;AAE1C;;;;AAAoB;AAAA;;;;;;;;;;;;;;;;;;;;;ACIb,MAAM,iBAAiB;IAE5B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;kFALU,iBAAiB;iGAAjB,iBAAiB;QCP9B,oEAAG;QAAA,2EAAgB;QAAA,4DAAI;;;;;;;;;;;;;;ACCvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACK;AACG;AACN;AACW;AACU;AACrB;;;AAEzD,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,OAAO,EAAS,SAAS,EAAE,qEAAc,EAAE;IACnD,EAAE,IAAI,EAAE,QAAQ,EAAQ,SAAS,EAAE,wEAAe,EAAE;IACpD,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,0FAAqB,EAAE;IAC1D,EAAE,IAAI,EAAE,OAAO,EAAS,SAAS,EAAE,qEAAc,EAAE;IACnD,EAAE,IAAI,EAAE,SAAS,EAAO,SAAS,EAAE,2EAAgB,EAAE;IACrD,EAAE,IAAI,EAAE,WAAW,EAAK,SAAS,EAAE,gFAAiB,EAAE;IAEtD,EAAE,IAAI,EAAE,EAAE,EAAI,UAAU,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE;IACtD,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,WAAW,EAAE;CACxC,CAAC;AAMK,MAAM,gBAAgB;;gFAAhB,gBAAgB;+FAAhB,gBAAgB;mGAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;;;;;;;;;;;;;ACrBxB;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AAOM,MAAO,cAAP,CAAqB;AAGzB,cAAoB,KAApB,EAA8C;AAA1B;AAClB,SAAK,KAAL,GAAa,KAAK,CAAC,IAAN,CAAW,0DAAM,CAAC,MAAD,CAAjB,CAAb;AACA,WAAO,CAAC,GAAR,CAAY,cAAZ;AACD;;AAED,UAAQ,IACP;;AATwB;;;mBAAd,c,EAAc,kH;AAAA,C;;;QAAd,c;AAAc,4B;AAAA,U;AAAA,S;AAAA,2R;AAAA;AAAA;ACT3B;AAAG;AAAY;AAEf;;;AAEA;AACI;AACI;AACA;AACA;AACJ;AACJ;;;;AARA;AAAA;;;;;;;;;;;;;;;;;;;;;;;ACF+C;AAGF;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["import { ProductModel } from './product.model';\n\nexport class CartModel {\n    public products: ProductModel[] = [];\n    public total: number = 0;\n}","import { Component, OnInit } from '@angular/core';\r\nimport { Store, select } from '@ngrx/store';\r\nimport { Observable } from 'rxjs';\r\nimport { Add, Remove, Clear } from 'src/app/redux/actions/cart.action';\r\nimport { ProductModel } from 'src/app/redux/models/product.model';\r\n\r\n@Component({\r\n  selector: 'app-notification',\r\n  templateUrl: './notification.component.html',\r\n  styleUrls: ['./notification.component.scss']\r\n})\r\nexport class NotificationComponent implements OnInit {\r\n \r\n  constructor () {}\r\n\r\n  ngOnInit() { }\r\n\r\n}\r\n","<p>notification works!</p>\r\n","import { Action } from '@ngrx/store';\n\nexport enum ActionTypes {\n    Add = 'ADD',\n    Remove = 'REM',\n    Clear = 'CLE',\n}\n\nexport const Add = (product: any) => {\n    return <Action>{ type: ActionTypes.Add, payload: product };\n}\n\nexport const Remove = (product: any) => {\n    return <Action>{ type: ActionTypes.Remove, payload: product };\n}\n\nexport const Clear = () => {\n    return <Action>{ type: ActionTypes.Clear, payload: null };\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n\r\n  env: 'DSV',\r\n  apiRootUrl: 'https://poc.com.br/api',\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","export class ProductModel {\n    public _id: string;\n    public title: string;\n    public category: string;\n    public description: string;\n    public price: number;\n    public images: string[];\n}","import { ActionTypes } from '../actions/cart.action';\nimport { ActionModel } from '../models/action.model';\nimport { CartModel } from '../models/cart.model';\nimport { ProductModel } from '../models/product.model';\n\nexport const cart = new CartModel();\n\nexport function cartReducer(state = cart, action: ActionModel) {\n    switch (action.type) {\n        case ActionTypes.Add:\n            {\n                state.products.push(action.payload);\n                state.total = calculateTotal(state.products);\n\n                console.log(state);\n                return state;\n            };\n\n        case ActionTypes.Remove:\n            {\n                const index = state.products.indexOf(action.payload);\n                state.products.splice(index, 1);\n                state.total = calculateTotal(state.products);\n\n                console.log(state);\n                return state;\n            };\n\n        case ActionTypes.Clear:\n            {\n                state = new CartModel();\n                state.total = calculateTotal(state.products);\n\n                console.log(state);\n                return state;\n            }\n\n        default:\n            return state;\n    }\n\n\n}\n\nfunction calculateTotal(products: ProductModel[]): number {\n    let total: number = 0;\n    products.forEach(product => {\n        total += product.price;\n    });\n    return total;\n}","import { Component, OnInit } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { Add, Remove, Clear } from 'src/app/redux/actions/cart.action';\nimport { ProductModel } from 'src/app/redux/models/product.model';\n\n@Component({\n  selector: 'app-redux',\n  templateUrl: './redux.component.html',\n  styleUrls: ['./redux.component.scss']\n})\nexport class ReduxComponent implements OnInit {\n  public products: any[] = null;\n  cart$: Observable<[]>;\n\n  constructor(\n    private store: Store<{ cart: [] }>) {  \n    this.cart$ = store.pipe(select('cart'));\n  }\n\n  ngOnInit() {\n    this.products = this.getProductMock();\n  }\n\n  async add(product) {\n    this.store.dispatch(Add(product));\n  }\n  \n  async del(product) {\n    this.store.dispatch(Remove(product));\n  }\n\n  clear() {\n    this.store.dispatch(Clear());\n  }\n\n  getProductMock() {\n    let product1 = new ProductModel;\n    product1._id = \"1c0487fd-1e33-47ec-9541-f8de43d8abfe\";\n    product1.title = \"GPS\";\n    product1.category = \"GARNIN\";\n    product1.description = \"GPS Automotivo Garmin Drive 51\";\n    product1.images = [\"https://baltademos.blob.core.windows.net/eshop/gps-automotivo-garmin-drive-51.jpg\"];\n    product1.price = 654.21;\n\n    let product2 = new ProductModel;\n    product2._id = \"f58448de-bb53-48fa-8347-70bad73f1ec4\";\n    product2.title = \"Notebook\";\n    product2.category = \"SAMSUNG\";\n    product2.description = \"Notebook SAMSUNG S3\";\n    product2.images = [\"https://baltademos.blob.core.windows.net/eshop/notebook-samsung-essentials-e30.jpg\"];\n    product2.price = 1700.89;\n    \n    let products : ProductModel[] = new Array;\n    products.push(product1);\n    products.push(product2);\n    return products;\n  }\n\n}\n\n","<p>redux works!</p>\n\n<div *ngIf=\"products\">\n    <table>\n      <tr *ngFor=\"let product of products\">\n        <td>{{ product.title }} <br />\n            {{ product.brand }} <br />\n            {{ product.price | currency: 'BRL' }} \n        </td>\n        <td><img src=\"{{ product.image }}\" alt=\"\"></td>\n        <td><button (click)=\"add(product)\">Adicionar</button></td>\n        <td><button (click)=\"del(product)\">Remover</button></td>\n      </tr>\n    </table>\n</div>\n\nTotal: {{ (cart$ | async).total | currency: 'BRL' }}\n\n<button (click)=\"clear()\">Limpar</button>","<mat-toolbar>\r\n    <span>{{ title }}</span>\r\n    <span class=\"example-spacer\"></span>\r\n    <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"MENU POC\">\r\n        <mat-icon>menu</mat-icon>\r\n    </button> \r\n</mat-toolbar>\r\n\r\n<mat-menu #menu=\"matMenu\">\r\n    <button mat-menu-item *ngFor=\"let menuItem of menuItems\">\r\n        <a class=\"nav-link\" [routerLink]=\"[menuItem.path]\">\r\n            <p>{{menuItem.title}}</p>\r\n        </a>\r\n    </button>\r\n</mat-menu>\r\n<router-outlet></router-outlet>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\ndeclare interface MenuInfo {\r\n  path: string;\r\n  title: string;\r\n}\r\nexport const MENU: MenuInfo[] = [\r\n  { path: '/camera',       title: 'Camera' },\r\n  { path: '/notification', title: 'Notificações' },\r\n  { path: '/login',        title: 'Login' },\r\n  { path: '/redux',        title: 'Redux' },\r\n  { path: '/graphql',      title: 'GraphQL' }\r\n];\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'POC CapacitorJS';\r\n  menuItems: any[] = [];\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    this.menuItems = MENU.filter(menuItem => menuItem);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {Apollo, gql} from 'apollo-angular';\r\n\r\n@Component({\r\n  selector: 'app-graphql',\r\n  templateUrl: './graphql.component.html',\r\n  styleUrls: ['./graphql.component.scss']\r\n})\r\nexport class GraphqlComponent implements OnInit {\r\n  countries: any[];\r\n  loading = true;\r\n  error: any;\r\n\r\n  constructor(private apollo: Apollo) {}\r\n\r\n  ngOnInit() {\r\n    this.apollo\r\n      .watchQuery({\r\n        query: gql`\r\n          {\r\n            countries {\r\n              name\r\n            }            \r\n          }\r\n        `,\r\n      })\r\n      .valueChanges.subscribe((result: any) => {\r\n        this.countries = result?.data?.countries;\r\n        this.loading = result.loading;\r\n        this.error = result.error;\r\n      });\r\n  }\r\n\r\n}\r\n","<p>graphql works!</p>\r\n\r\n<div *ngIf=\"loading\">\r\n    Loading...\r\n  </div>\r\n  <div *ngIf=\"error\">\r\n    Error :(\r\n  </div>\r\n  <div *ngIf=\"countries\">\r\n    <div *ngFor=\"let country of countries\">\r\n      <p>{{ country.name }}</p>\r\n    </div>\r\n  </div>","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { NotFoundComponent } from './not-found/not-found.component';\r\nimport { CameraComponent } from './camera/camera.component';\r\nimport { NotificationComponent } from './notification/notification.component';\r\n\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport {APOLLO_OPTIONS} from 'apollo-angular';\r\nimport {HttpLink} from 'apollo-angular/http';\r\nimport {InMemoryCache} from '@apollo/client/core';\r\n\r\nimport { ActionReducer, MetaReducer, StoreModule } from '@ngrx/store';\r\nimport { localStorageSync } from 'ngrx-store-localstorage';\r\nimport { cartReducer } from './redux/reducers/cart.reducer';\r\nimport { ReduxComponent } from './redux/redux.component';\r\nimport { GraphqlComponent } from './graphql/graphql.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nexport function localStorageSyncReducer(reducer: ActionReducer<any>): ActionReducer<any> {\r\n  return localStorageSync({\r\n    keys: [\r\n      'cart'\r\n    ],\r\n    rehydrate: true\r\n  })(reducer);\r\n}\r\n\r\nconst metaReducers: Array<MetaReducer<any, any>> = [localStorageSyncReducer];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    NotFoundComponent,\r\n    CameraComponent,\r\n    NotificationComponent,\r\n    ReduxComponent,\r\n    GraphqlComponent\r\n  ],\r\n  imports: [\r\n    AppRoutingModule,\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatMenuModule,\r\n    MatToolbarModule,\r\n    StoreModule.forRoot(\r\n      { cart: cartReducer },\r\n      { metaReducers }\r\n    )\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: APOLLO_OPTIONS,\r\n      useFactory: (httpLink: HttpLink) => {\r\n        return {\r\n          cache: new InMemoryCache(),\r\n          link: httpLink.create({\r\n            uri: 'https://countries.trevorblades.com',\r\n          }),\r\n        };\r\n      },\r\n      deps: [HttpLink],\r\n    },\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { SafeResourceUrl } from '@angular/platform-browser';\r\nimport { Camera, CameraResultType } from '@capacitor/camera';\r\n\r\n@Component({\r\n  selector: 'app-camera',\r\n  templateUrl: './camera.component.html',\r\n  styleUrls: ['./camera.component.scss']\r\n})\r\nexport class CameraComponent implements OnInit {\r\n  photo : SafeResourceUrl = \"\";\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  async takePicture() {\r\n    const image = await Camera.getPhoto({\r\n      quality: 90,\r\n      allowEditing: true,\r\n      resultType: CameraResultType.DataUrl\r\n    });\r\n  \r\n    // image.webPath will contain a path that can be set as an image src.\r\n    // You can access the original file using image.path, which can be\r\n    // passed to the Filesystem API to read the raw data of the image,\r\n    // if desired (or pass resultType: CameraResultType.Base64 to getPhoto)\r\n    var imageUrl = image.webPath;\r\n  \r\n    // Can be set to the src of an image now\r\n    this.photo = image.dataUrl || \"\";\r\n  };\r\n}\r\n","<p>CAMERA</p>\r\n<button (click)=\"takePicture()\">Tirar Foto</button>\r\n\r\n<img [src]=\"photo\" *ngIf=\"photo\" />\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-not-found',\r\n  templateUrl: './not-found.component.html',\r\n  styleUrls: ['./not-found.component.scss']\r\n})\r\nexport class NotFoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>not-found works!</p>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { CameraComponent } from './camera/camera.component';\r\nimport { GraphqlComponent } from './graphql/graphql.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { NotFoundComponent } from './not-found/not-found.component';\r\nimport { NotificationComponent } from './notification/notification.component';\r\nimport { ReduxComponent } from './redux/redux.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'login',        component: LoginComponent },\r\n  { path: 'camera',       component: CameraComponent },\r\n  { path: 'notification', component: NotificationComponent },\r\n  { path: 'redux',        component: ReduxComponent },\r\n  { path: 'graphql',      component: GraphqlComponent },\r\n  { path: 'not-found',    component: NotFoundComponent },\r\n  \r\n  { path: ''  , redirectTo: 'login', pathMatch: 'full' },\r\n  { path: '**', redirectTo: 'not-found' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Store, select } from '@ngrx/store';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  cart$: Observable<[]>;\r\n\r\n  constructor(private store: Store<{ cart: [] }>) {\r\n    this.cart$ = store.pipe(select('cart'));\r\n    console.log('Teste de Log');\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>login works!</p>\r\n\r\nTotal: {{ (cart$ | async).total | currency: 'BRL' }}\r\n\r\n<div class=\"load\" style=\"background-color: #CC0000; height: 100vh; display: grid; grid-row: 1; align-items: center;\">\r\n    <ng-container class=\"col\">\r\n        <div class=\"fast-checkout-icon text-center\">\r\n        <img src=\"./assets/close.svg\" alt=\"Logo fast checkout\" class=\"fast-checkout-logo-branco\"/>\r\n        </div>\r\n    </ng-container>\r\n</div>","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}